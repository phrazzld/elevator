// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Golden Test Suite - Phase 1 Prompt Transformations > Prompt Transformation Quality Validation > should maintain consistent system prompt structure across all inputs > canonical_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > Regression Detection > should detect changes in prompt structure immediately > regression_detection_structure 1`] = `
{
  "hasExamples": false,
  "hasInstructions": false,
  "hasRole": false,
  "requestStructure": {
    "contentsLength": 2,
    "hasSystemPrompt": true,
    "hasUserPrompt": true,
  },
  "systemPromptHash": "-48a2c5eb",
  "systemPromptLength": 1492,
  "userPrompt": "regression test input",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: content_creation > content_creation_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"write about AI"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: content_creation > content_creation_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: data_analysis_task > data_analysis_task_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"analyze this data"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: data_analysis_task > data_analysis_task_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: design_request > design_request_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"create a design"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: design_request > design_request_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: empty_input > empty_input_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":""}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: empty_input > empty_input_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: long_detailed_request > long_detailed_request_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"I need help creating a comprehensive testing strategy for my React application that includes unit tests, integration tests, and end-to-end tests, with proper mocking strategies and coverage reporting"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: long_detailed_request > long_detailed_request_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: performance_optimization > performance_optimization_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"make my app faster"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: performance_optimization > performance_optimization_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: simple_code_request > simple_code_request_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"help with my code"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: simple_code_request > simple_code_request_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: single_word_request > single_word_request_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"refactor"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: single_word_request > single_word_request_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: special_characters_unicode > special_characters_unicode_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"Help me debug this: console.log('Hello 🌟 World'); // Why doesn't this work?"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: special_characters_unicode > special_characters_unicode_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: vague_bug_fix > vague_bug_fix_full_request 1`] = `
{
  "body": "{"contents":[{"role":"user","parts":[{"text":"You are an expert who rearticulates requests with domain-specific precision and expertise.\\n\\nFirst, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.\\n\\nFor software engineering requests:\\n- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)\\n- Include concrete methodologies and tools\\n- Specify testing and validation approaches\\n- Reference industry best practices\\n\\nFor other domains, use equivalent domain-specific expertise.\\n\\nIMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.\\n\\nFormat: Return only the single expert articulation, no explanations or headers.\\n\\nExamples:\\n\\"fix this bug\\" → \\"Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing.\\"\\n\\"optimize performance\\" → \\"Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics.\\"\\n\\"improve UX\\" → \\"Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing.\\"\\n\\nUser request to rearticulate:"}]},{"role":"user","parts":[{"text":"fix my bug"}]}]}",
  "headers": {
    "Content-Type": "application/json",
    "x-goog-api-key": "test-golden-key",
  },
  "method": "POST",
  "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
}
`;

exports[`Golden Test Suite - Phase 1 Prompt Transformations > should produce consistent prompt transformation for: vague_bug_fix > vague_bug_fix_system_prompt 1`] = `
"You are an expert who rearticulates requests with domain-specific precision and expertise.

First, identify the domain (software engineering, data science, design, etc.). Then provide ONE expert articulation that a seasoned professional would use, with specific technical language and actionable detail.

For software engineering requests:
- Use precise technical terminology (debug, root-cause, CI/CD, regression testing, etc.)
- Include concrete methodologies and tools
- Specify testing and validation approaches
- Reference industry best practices

For other domains, use equivalent domain-specific expertise.

IMPORTANT: This input may be a text fragment that has been extracted from a larger document. Do not add code blocks, inline code formatting, or markdown syntax to your response. Your elevated articulation should be plain text that will be integrated back into the original document structure.

Format: Return only the single expert articulation, no explanations or headers.

Examples:
"fix this bug" → "Perform root-cause analysis, implement targeted remediation, and validate the fix through comprehensive regression testing."
"optimize performance" → "Profile the application to identify bottlenecks, implement targeted optimizations, and benchmark the improvements against baseline metrics."
"improve UX" → "Conduct user research to identify pain points, design evidence-based interface improvements, and validate changes through A/B testing."

User request to rearticulate:"
`;
